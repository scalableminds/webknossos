# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import fossildbapi_pb2 as fossildbapi__pb2


class FossilDBStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Health = channel.unary_unary(
                '/com.scalableminds.fossildb.proto.FossilDB/Health',
                request_serializer=fossildbapi__pb2.HealthRequest.SerializeToString,
                response_deserializer=fossildbapi__pb2.HealthReply.FromString,
                )
        self.Get = channel.unary_unary(
                '/com.scalableminds.fossildb.proto.FossilDB/Get',
                request_serializer=fossildbapi__pb2.GetRequest.SerializeToString,
                response_deserializer=fossildbapi__pb2.GetReply.FromString,
                )
        self.GetMultipleVersions = channel.unary_unary(
                '/com.scalableminds.fossildb.proto.FossilDB/GetMultipleVersions',
                request_serializer=fossildbapi__pb2.GetMultipleVersionsRequest.SerializeToString,
                response_deserializer=fossildbapi__pb2.GetMultipleVersionsReply.FromString,
                )
        self.GetMultipleKeys = channel.unary_unary(
                '/com.scalableminds.fossildb.proto.FossilDB/GetMultipleKeys',
                request_serializer=fossildbapi__pb2.GetMultipleKeysRequest.SerializeToString,
                response_deserializer=fossildbapi__pb2.GetMultipleKeysReply.FromString,
                )
        self.GetMultipleKeysByListWithMultipleVersions = channel.unary_unary(
                '/com.scalableminds.fossildb.proto.FossilDB/GetMultipleKeysByListWithMultipleVersions',
                request_serializer=fossildbapi__pb2.GetMultipleKeysByListWithMultipleVersionsRequest.SerializeToString,
                response_deserializer=fossildbapi__pb2.GetMultipleKeysByListWithMultipleVersionsReply.FromString,
                )
        self.Put = channel.unary_unary(
                '/com.scalableminds.fossildb.proto.FossilDB/Put',
                request_serializer=fossildbapi__pb2.PutRequest.SerializeToString,
                response_deserializer=fossildbapi__pb2.PutReply.FromString,
                )
        self.PutMultipleVersions = channel.unary_unary(
                '/com.scalableminds.fossildb.proto.FossilDB/PutMultipleVersions',
                request_serializer=fossildbapi__pb2.PutMultipleVersionsRequest.SerializeToString,
                response_deserializer=fossildbapi__pb2.PutMultipleVersionsReply.FromString,
                )
        self.PutMultipleKeysWithMultipleVersions = channel.unary_unary(
                '/com.scalableminds.fossildb.proto.FossilDB/PutMultipleKeysWithMultipleVersions',
                request_serializer=fossildbapi__pb2.PutMultipleKeysWithMultipleVersionsRequest.SerializeToString,
                response_deserializer=fossildbapi__pb2.PutMultipleKeysWithMultipleVersionsReply.FromString,
                )
        self.Delete = channel.unary_unary(
                '/com.scalableminds.fossildb.proto.FossilDB/Delete',
                request_serializer=fossildbapi__pb2.DeleteRequest.SerializeToString,
                response_deserializer=fossildbapi__pb2.DeleteReply.FromString,
                )
        self.DeleteMultipleVersions = channel.unary_unary(
                '/com.scalableminds.fossildb.proto.FossilDB/DeleteMultipleVersions',
                request_serializer=fossildbapi__pb2.DeleteMultipleVersionsRequest.SerializeToString,
                response_deserializer=fossildbapi__pb2.DeleteMultipleVersionsReply.FromString,
                )
        self.DeleteAllByPrefix = channel.unary_unary(
                '/com.scalableminds.fossildb.proto.FossilDB/DeleteAllByPrefix',
                request_serializer=fossildbapi__pb2.DeleteAllByPrefixRequest.SerializeToString,
                response_deserializer=fossildbapi__pb2.DeleteAllByPrefixReply.FromString,
                )
        self.ListKeys = channel.unary_unary(
                '/com.scalableminds.fossildb.proto.FossilDB/ListKeys',
                request_serializer=fossildbapi__pb2.ListKeysRequest.SerializeToString,
                response_deserializer=fossildbapi__pb2.ListKeysReply.FromString,
                )
        self.ListVersions = channel.unary_unary(
                '/com.scalableminds.fossildb.proto.FossilDB/ListVersions',
                request_serializer=fossildbapi__pb2.ListVersionsRequest.SerializeToString,
                response_deserializer=fossildbapi__pb2.ListVersionsReply.FromString,
                )
        self.Backup = channel.unary_unary(
                '/com.scalableminds.fossildb.proto.FossilDB/Backup',
                request_serializer=fossildbapi__pb2.BackupRequest.SerializeToString,
                response_deserializer=fossildbapi__pb2.BackupReply.FromString,
                )
        self.RestoreFromBackup = channel.unary_unary(
                '/com.scalableminds.fossildb.proto.FossilDB/RestoreFromBackup',
                request_serializer=fossildbapi__pb2.RestoreFromBackupRequest.SerializeToString,
                response_deserializer=fossildbapi__pb2.RestoreFromBackupReply.FromString,
                )
        self.CompactAllData = channel.unary_unary(
                '/com.scalableminds.fossildb.proto.FossilDB/CompactAllData',
                request_serializer=fossildbapi__pb2.CompactAllDataRequest.SerializeToString,
                response_deserializer=fossildbapi__pb2.CompactAllDataReply.FromString,
                )
        self.ExportDB = channel.unary_unary(
                '/com.scalableminds.fossildb.proto.FossilDB/ExportDB',
                request_serializer=fossildbapi__pb2.ExportDBRequest.SerializeToString,
                response_deserializer=fossildbapi__pb2.ExportDBReply.FromString,
                )


class FossilDBServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Health(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMultipleVersions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMultipleKeys(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMultipleKeysByListWithMultipleVersions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Put(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutMultipleVersions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutMultipleKeysWithMultipleVersions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMultipleVersions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAllByPrefix(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListKeys(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListVersions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Backup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestoreFromBackup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompactAllData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExportDB(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FossilDBServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Health': grpc.unary_unary_rpc_method_handler(
                    servicer.Health,
                    request_deserializer=fossildbapi__pb2.HealthRequest.FromString,
                    response_serializer=fossildbapi__pb2.HealthReply.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=fossildbapi__pb2.GetRequest.FromString,
                    response_serializer=fossildbapi__pb2.GetReply.SerializeToString,
            ),
            'GetMultipleVersions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMultipleVersions,
                    request_deserializer=fossildbapi__pb2.GetMultipleVersionsRequest.FromString,
                    response_serializer=fossildbapi__pb2.GetMultipleVersionsReply.SerializeToString,
            ),
            'GetMultipleKeys': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMultipleKeys,
                    request_deserializer=fossildbapi__pb2.GetMultipleKeysRequest.FromString,
                    response_serializer=fossildbapi__pb2.GetMultipleKeysReply.SerializeToString,
            ),
            'GetMultipleKeysByListWithMultipleVersions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMultipleKeysByListWithMultipleVersions,
                    request_deserializer=fossildbapi__pb2.GetMultipleKeysByListWithMultipleVersionsRequest.FromString,
                    response_serializer=fossildbapi__pb2.GetMultipleKeysByListWithMultipleVersionsReply.SerializeToString,
            ),
            'Put': grpc.unary_unary_rpc_method_handler(
                    servicer.Put,
                    request_deserializer=fossildbapi__pb2.PutRequest.FromString,
                    response_serializer=fossildbapi__pb2.PutReply.SerializeToString,
            ),
            'PutMultipleVersions': grpc.unary_unary_rpc_method_handler(
                    servicer.PutMultipleVersions,
                    request_deserializer=fossildbapi__pb2.PutMultipleVersionsRequest.FromString,
                    response_serializer=fossildbapi__pb2.PutMultipleVersionsReply.SerializeToString,
            ),
            'PutMultipleKeysWithMultipleVersions': grpc.unary_unary_rpc_method_handler(
                    servicer.PutMultipleKeysWithMultipleVersions,
                    request_deserializer=fossildbapi__pb2.PutMultipleKeysWithMultipleVersionsRequest.FromString,
                    response_serializer=fossildbapi__pb2.PutMultipleKeysWithMultipleVersionsReply.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=fossildbapi__pb2.DeleteRequest.FromString,
                    response_serializer=fossildbapi__pb2.DeleteReply.SerializeToString,
            ),
            'DeleteMultipleVersions': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMultipleVersions,
                    request_deserializer=fossildbapi__pb2.DeleteMultipleVersionsRequest.FromString,
                    response_serializer=fossildbapi__pb2.DeleteMultipleVersionsReply.SerializeToString,
            ),
            'DeleteAllByPrefix': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAllByPrefix,
                    request_deserializer=fossildbapi__pb2.DeleteAllByPrefixRequest.FromString,
                    response_serializer=fossildbapi__pb2.DeleteAllByPrefixReply.SerializeToString,
            ),
            'ListKeys': grpc.unary_unary_rpc_method_handler(
                    servicer.ListKeys,
                    request_deserializer=fossildbapi__pb2.ListKeysRequest.FromString,
                    response_serializer=fossildbapi__pb2.ListKeysReply.SerializeToString,
            ),
            'ListVersions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListVersions,
                    request_deserializer=fossildbapi__pb2.ListVersionsRequest.FromString,
                    response_serializer=fossildbapi__pb2.ListVersionsReply.SerializeToString,
            ),
            'Backup': grpc.unary_unary_rpc_method_handler(
                    servicer.Backup,
                    request_deserializer=fossildbapi__pb2.BackupRequest.FromString,
                    response_serializer=fossildbapi__pb2.BackupReply.SerializeToString,
            ),
            'RestoreFromBackup': grpc.unary_unary_rpc_method_handler(
                    servicer.RestoreFromBackup,
                    request_deserializer=fossildbapi__pb2.RestoreFromBackupRequest.FromString,
                    response_serializer=fossildbapi__pb2.RestoreFromBackupReply.SerializeToString,
            ),
            'CompactAllData': grpc.unary_unary_rpc_method_handler(
                    servicer.CompactAllData,
                    request_deserializer=fossildbapi__pb2.CompactAllDataRequest.FromString,
                    response_serializer=fossildbapi__pb2.CompactAllDataReply.SerializeToString,
            ),
            'ExportDB': grpc.unary_unary_rpc_method_handler(
                    servicer.ExportDB,
                    request_deserializer=fossildbapi__pb2.ExportDBRequest.FromString,
                    response_serializer=fossildbapi__pb2.ExportDBReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.scalableminds.fossildb.proto.FossilDB', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FossilDB(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Health(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.scalableminds.fossildb.proto.FossilDB/Health',
            fossildbapi__pb2.HealthRequest.SerializeToString,
            fossildbapi__pb2.HealthReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.scalableminds.fossildb.proto.FossilDB/Get',
            fossildbapi__pb2.GetRequest.SerializeToString,
            fossildbapi__pb2.GetReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMultipleVersions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.scalableminds.fossildb.proto.FossilDB/GetMultipleVersions',
            fossildbapi__pb2.GetMultipleVersionsRequest.SerializeToString,
            fossildbapi__pb2.GetMultipleVersionsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMultipleKeys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.scalableminds.fossildb.proto.FossilDB/GetMultipleKeys',
            fossildbapi__pb2.GetMultipleKeysRequest.SerializeToString,
            fossildbapi__pb2.GetMultipleKeysReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMultipleKeysByListWithMultipleVersions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.scalableminds.fossildb.proto.FossilDB/GetMultipleKeysByListWithMultipleVersions',
            fossildbapi__pb2.GetMultipleKeysByListWithMultipleVersionsRequest.SerializeToString,
            fossildbapi__pb2.GetMultipleKeysByListWithMultipleVersionsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Put(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.scalableminds.fossildb.proto.FossilDB/Put',
            fossildbapi__pb2.PutRequest.SerializeToString,
            fossildbapi__pb2.PutReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutMultipleVersions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.scalableminds.fossildb.proto.FossilDB/PutMultipleVersions',
            fossildbapi__pb2.PutMultipleVersionsRequest.SerializeToString,
            fossildbapi__pb2.PutMultipleVersionsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutMultipleKeysWithMultipleVersions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.scalableminds.fossildb.proto.FossilDB/PutMultipleKeysWithMultipleVersions',
            fossildbapi__pb2.PutMultipleKeysWithMultipleVersionsRequest.SerializeToString,
            fossildbapi__pb2.PutMultipleKeysWithMultipleVersionsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.scalableminds.fossildb.proto.FossilDB/Delete',
            fossildbapi__pb2.DeleteRequest.SerializeToString,
            fossildbapi__pb2.DeleteReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteMultipleVersions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.scalableminds.fossildb.proto.FossilDB/DeleteMultipleVersions',
            fossildbapi__pb2.DeleteMultipleVersionsRequest.SerializeToString,
            fossildbapi__pb2.DeleteMultipleVersionsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAllByPrefix(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.scalableminds.fossildb.proto.FossilDB/DeleteAllByPrefix',
            fossildbapi__pb2.DeleteAllByPrefixRequest.SerializeToString,
            fossildbapi__pb2.DeleteAllByPrefixReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListKeys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.scalableminds.fossildb.proto.FossilDB/ListKeys',
            fossildbapi__pb2.ListKeysRequest.SerializeToString,
            fossildbapi__pb2.ListKeysReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListVersions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.scalableminds.fossildb.proto.FossilDB/ListVersions',
            fossildbapi__pb2.ListVersionsRequest.SerializeToString,
            fossildbapi__pb2.ListVersionsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Backup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.scalableminds.fossildb.proto.FossilDB/Backup',
            fossildbapi__pb2.BackupRequest.SerializeToString,
            fossildbapi__pb2.BackupReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RestoreFromBackup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.scalableminds.fossildb.proto.FossilDB/RestoreFromBackup',
            fossildbapi__pb2.RestoreFromBackupRequest.SerializeToString,
            fossildbapi__pb2.RestoreFromBackupReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CompactAllData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.scalableminds.fossildb.proto.FossilDB/CompactAllData',
            fossildbapi__pb2.CompactAllDataRequest.SerializeToString,
            fossildbapi__pb2.CompactAllDataReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExportDB(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.scalableminds.fossildb.proto.FossilDB/ExportDB',
            fossildbapi__pb2.ExportDBRequest.SerializeToString,
            fossildbapi__pb2.ExportDBReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
