# Note: keep this in sync with the reported version numbers in the com.scalableminds.util.mvc.ApiVersioning trait

->  /v10/ datastore.latest.Routes
->  /v9/  datastore.latest.Routes

# Zarr2 compatible routes
GET           /v9/zarr/:organizationId/:datasetDirectoryName                                                                                             @com.scalableminds.webknossos.datastore.controllers.LegacyController.requestDataSourceDirectoryContents(organizationId: String, datasetDirectoryName: String, zarrVersion: Int = 2)
GET           /v9/zarr/:organizationId/:datasetDirectoryName/                                                                                            @com.scalableminds.webknossos.datastore.controllers.LegacyController.requestDataSourceDirectoryContents(organizationId: String, datasetDirectoryName: String, zarrVersion: Int = 2)
GET           /v9/zarr/:organizationId/:datasetDirectoryName/.zgroup                                                                                     @com.scalableminds.webknossos.datastore.controllers.LegacyController.requestZGroup(organizationId: String, datasetDirectoryName: String, dataLayerName="")
GET           /v9/zarr/:organizationId/:datasetDirectoryName/datasource-properties.json                                                                  @com.scalableminds.webknossos.datastore.controllers.LegacyController.requestDataSource(organizationId: String, datasetDirectoryName: String, zarrVersion: Int = 2)
GET           /v9/zarr/:organizationId/:datasetDirectoryName/:dataLayerName                                                                              @com.scalableminds.webknossos.datastore.controllers.LegacyController.requestDataLayerDirectoryContents(organizationId: String, datasetDirectoryName: String, dataLayerName: String, zarrVersion: Int = 2)
GET           /v9/zarr/:organizationId/:datasetDirectoryName/:dataLayerName/                                                                             @com.scalableminds.webknossos.datastore.controllers.LegacyController.requestDataLayerDirectoryContents(organizationId: String, datasetDirectoryName: String, dataLayerName: String, zarrVersion: Int = 2)
GET           /v9/zarr/:organizationId/:datasetDirectoryName/:dataLayerName/.zattrs                                                                      @com.scalableminds.webknossos.datastore.controllers.LegacyController.requestZAttrs(organizationId: String, datasetDirectoryName: String, dataLayerName: String)
GET           /v9/zarr/:organizationId/:datasetDirectoryName/:dataLayerName/.zgroup                                                                      @com.scalableminds.webknossos.datastore.controllers.LegacyController.requestZGroup(organizationId: String, datasetDirectoryName: String, dataLayerName: String)
GET           /v9/zarr/:organizationId/:datasetDirectoryName/:dataLayerName/:mag                                                                         @com.scalableminds.webknossos.datastore.controllers.LegacyController.requestDataLayerMagDirectoryContents(organizationId: String, datasetDirectoryName: String, dataLayerName: String, mag: String, zarrVersion: Int = 2)
GET           /v9/zarr/:organizationId/:datasetDirectoryName/:dataLayerName/:mag/                                                                        @com.scalableminds.webknossos.datastore.controllers.LegacyController.requestDataLayerMagDirectoryContents(organizationId: String, datasetDirectoryName: String, dataLayerName: String, mag: String, zarrVersion: Int = 2)
GET           /v9/zarr/:organizationId/:datasetDirectoryName/:dataLayerName/:mag/.zarray                                                                 @com.scalableminds.webknossos.datastore.controllers.LegacyController.requestZArray(organizationId: String, datasetDirectoryName: String, dataLayerName: String, mag: String)
GET           /v9/zarr/:organizationId/:datasetDirectoryName/:dataLayerName/:mag/:coordinates                                                            @com.scalableminds.webknossos.datastore.controllers.LegacyController.requestRawZarrCube(organizationId: String, datasetDirectoryName: String, dataLayerName: String, mag: String, coordinates: String)

# Zarr3 compatible routes
GET           /v9/zarr3_experimental/:organizationId/:datasetDirectoryName                                                                               @com.scalableminds.webknossos.datastore.controllers.LegacyController.requestDataSourceDirectoryContents(organizationId: String, datasetDirectoryName: String, zarrVersion: Int = 3)
GET           /v9/zarr3_experimental/:organizationId/:datasetDirectoryName/                                                                              @com.scalableminds.webknossos.datastore.controllers.LegacyController.requestDataSourceDirectoryContents(organizationId: String, datasetDirectoryName: String, zarrVersion: Int = 3)
GET           /v9/zarr3_experimental/:organizationId/:datasetDirectoryName/datasource-properties.json                                                    @com.scalableminds.webknossos.datastore.controllers.LegacyController.requestDataSource(organizationId: String, datasetDirectoryName: String, zarrVersion: Int = 3)
GET           /v9/zarr3_experimental/:organizationId/:datasetDirectoryName/:dataLayerName                                                                @com.scalableminds.webknossos.datastore.controllers.LegacyController.requestDataLayerDirectoryContents(organizationId: String, datasetDirectoryName: String, dataLayerName: String, zarrVersion: Int = 3)
GET           /v9/zarr3_experimental/:organizationId/:datasetDirectoryName/:dataLayerName/                                                               @com.scalableminds.webknossos.datastore.controllers.LegacyController.requestDataLayerDirectoryContents(organizationId: String, datasetDirectoryName: String, dataLayerName: String, zarrVersion: Int = 3)
GET           /v9/zarr3_experimental/:organizationId/:datasetDirectoryName/:dataLayerName/zarr.json                                                      @com.scalableminds.webknossos.datastore.controllers.LegacyController.requestZarrJson(organizationId: String, datasetDirectoryName: String, dataLayerName: String)
GET           /v9/zarr3_experimental/:organizationId/:datasetDirectoryName/:dataLayerName/:mag                                                           @com.scalableminds.webknossos.datastore.controllers.LegacyController.requestDataLayerMagDirectoryContents(organizationId: String, datasetDirectoryName: String, dataLayerName: String, mag: String, zarrVersion: Int = 3)
GET           /v9/zarr3_experimental/:organizationId/:datasetDirectoryName/:dataLayerName/:mag/                                                          @com.scalableminds.webknossos.datastore.controllers.LegacyController.requestDataLayerMagDirectoryContents(organizationId: String, datasetDirectoryName: String, dataLayerName: String, mag: String, zarrVersion: Int = 3)
GET           /v9/zarr3_experimental/:organizationId/:datasetDirectoryName/:dataLayerName/:mag/zarr.json                                                 @com.scalableminds.webknossos.datastore.controllers.LegacyController.requestZarrJsonForMag(organizationId: String, datasetDirectoryName: String, dataLayerName: String, mag: String)
GET           /v9/zarr3_experimental/:organizationId/:datasetDirectoryName/:dataLayerName/:mag/:coordinates                                              @com.scalableminds.webknossos.datastore.controllers.LegacyController.requestRawZarrCube(organizationId: String, datasetDirectoryName: String, dataLayerName: String, mag: String, coordinates: String)

->  /v8/  datastore.latest.Routes
->  /v7/  datastore.latest.Routes
->  /v6/  datastore.latest.Routes
->  /v5/  datastore.latest.Routes

->  /     datastore.latest.Routes
