# API versioning is handled here. Higher-Priority routes first

# example: assume, the features route has changed, introducing v2. The older v1 needs to be provided in the legacyApiController

->       /v3/                                                                 webknossos.latest.Routes

PATCH    /v2/annotations/:typ/:id/finish                                      controllers.LegacyApiController.annotationFinishV2(typ: String, id: String)
GET      /v2/annotations/:typ/:id/info                                        controllers.LegacyApiController.annotationInfoV2(typ: String, id: String)

->       /v2/                                                                 webknossos.latest.Routes

#
PATCH    /v1/annotations/:typ/:id/edit                                        controllers.LegacyApiController.editAnnotation(typ: String, id: String)
# input needs to change

POST     /v1/annotations/:typ/:id/duplicate                                   controllers.LegacyApiController.annotationDuplicate(typ: String, id: String)
PATCH    /v1/annotations/:typ/:id/finish                                      controllers.LegacyApiController.annotationFinish(typ: String, id: String)
PATCH    /v1/annotations/:typ/:id/reopen                                      controllers.LegacyApiController.annotationReopen(typ: String, id: String)
PUT      /v1/annotations/:typ/:id/reset                                       controllers.LegacyApiController.annotationReset(typ: String, id: String)
PATCH    /v1/annotations/:typ/:id/transfer                                    controllers.LegacyApiController.annotationTransfer(typ: String, id: String)
GET      /v1/annotations/:typ/:id/info                                        controllers.LegacyApiController.annotationInfo(typ: String, id: String)
PATCH    /v1/annotations/:typ/:id/makeHybrid                                  controllers.LegacyApiController.annotationMakeHybrid(typ: String, id: String)
POST     /v1/annotations/:typ/:id/merge/:mergedTyp/:mergedId                  controllers.LegacyApiController.annotationMerge(typ: String, id: String, mergedTyp: String, mergedId: String)
POST     /v1/datasets/:organizationName/:dataSetName/createExplorational      controllers.LegacyApiController.annotationCreateExplorational(organizationName: String, dataSetName: String)
GET      /v1/user/annotations                                                 controllers.LegacyApiController.annotations(isFinished: Option[Boolean], limit: Option[Int], pageNumber: Option[Int], includeTotalCount: Option[Boolean])
GET      /v1/user/tasks                                                       controllers.LegacyApiController.tasks(isFinished: Option[Boolean], limit: Option[Int], pageNumber: Option[Int], includeTotalCount: Option[Boolean])
GET      /v1/users/:id/annotations                                            controllers.LegacyApiController.userAnnotations(id: String, isFinished: Option[Boolean], limit: Option[Int], pageNumber: Option[Int], includeTotalCount: Option[Boolean])
GET      /v1/users/:id/tasks                                                  controllers.LegacyApiController.userTasks(id: String, isFinished: Option[Boolean], limit: Option[Int], pageNumber: Option[Int], includeTotalCount: Option[Boolean])
POST     /v1/user/tasks/request                                               controllers.LegacyApiController.taskRequest
GET      /v1/tasks/:id/annotations                                            controllers.LegacyApiController.annotationsForTask(id: String)


->       /v1/                                                                 webknossos.latest.Routes


->       /                                                                    webknossos.latest.Routes
