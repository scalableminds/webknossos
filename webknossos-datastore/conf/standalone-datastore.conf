http {
  address = "0.0.0.0"
  uri = "http://localhost:9090"
}

play {
  modules.enabled += "com.scalableminds.webknossos.datastore.DataStoreModule"
  http {
    requestHandler = "DsRequestHandler"
    filters = "com.scalableminds.webknossos.datastore.Filters"
    secret.key = "/tfger=?!359=(623de35]/3eg>34>r9/of/45gh654>?!654g/5f4//hbfw245<"
    parser {
      maxMemoryBuffer = 250M
      maxDiskBuffer = 1G
    }
  }
  filters.headers {
    # Unset some of the security filters enabled in datastore.Filters
    contentSecurityPolicy = null
    contentTypeOptions = null
  }
  server {
    # Timeouts. Note that these take effect only in production mode (timeouts are shorter in dev)
    http.idleTimeout = 10000s
    akka.requestTimeout = 10000s
  }
}

# Actor settings
akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
}

# Avoid the creation of a pid file
pidfile.path = "/dev/null"

application {
  name = "standalone-datastore"
  branch = local
}


datastore {
  key = "something-secur3"
  name = "standalone-9090"
  webKnossos {
    uri = "http://localhost:9000"
    pingIntervalMinutes = 10
  }
}

braingames.binary {
  cacheMaxSize = 1000 # number of entries
  mappingCacheMaxSize = 5 # number of entries
  agglomerateFileCacheMaxSize = 15 # number of entries
  agglomerateCacheMaxSize = 625000 # number of entries
  agglomerateStandardBlockSize = 512 # standard block size of cache reads, best size ~= file block size / bytes per id
  agglomerateMaxReaderRange = 1310720 # max size per read when using cumsum.json
  isosurfaceTimeout = 30 # in seconds
  isosurfaceActorPoolSize = 1
  baseFolder = binaryData
  agglomerateSkeletonEdgeLimit = 10000

  changeHandler {
    enabled = true
    tickerInterval = 1 # in minutes
  }
}
