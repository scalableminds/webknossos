name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'
  workflow_dispatch:
    inputs:
      tmate_debug_build:
        type: boolean
        description: "Debug Build Job"
        required: false
        default: false
      tmate_debug_e2e_tests:
        type: boolean
        description: "Debug e2e Tests"
        required: false
        default: false
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

env:
  USER_NAME: root
  USER_UID: 1000
  USER_GID: 1000
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
  POSTGRES_USER: "webknossos_user"
  POSTGRES_PASSWORD: "secret_password"

jobs:
  static_frontend_code_checks:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 5
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: corepack enable
      - uses: actions/cache@v4
        id: node_modules
        with:
          path: |
            tools/postgres/node_modules
            tools/proxy/node_modules
            node_modules
          key: node_modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install frontend dependencies
        if: steps.node_modules.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: Lint frontend code and check formatting
        run: yarn run check-frontend
      - name: Typecheck frontend code
        run: yarn typecheck
      - name: Check for cyclic dependencies in frontend
        run: yarn check-cyclic-dependencies

  build_test_deploy:
    runs-on: ubuntu-24.04
    env:
      USER_UID: 1001
      USER_GID: 1001
      POSTGRES_URL: "jdbc:postgresql://localhost:5432/webknossos"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 5

      - uses: docker/setup-buildx-action@v2
      - name: Start Docker Services
        run: docker compose --file .github/docker-compose.yml up -d postgres redis

      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: corepack enable

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - uses: sbt/setup-sbt@v1

      - name: "Install System Dependencies"
        run: sudo apt-get update && sudo apt-get install -y libdraco-dev libblosc1

      - name: "Custom environment variables"
        id: configure
        run: |
          if [[ ${{ github.ref_type }} == "branch" ]]; then
            NORMALIZED_BRANCH=$(echo ${{ github.ref_name }} | sed 's/[\/-]/_/g')
            echo "normalized_branch=$NORMALIZED_BRANCH" >> "$GITHUB_OUTPUT"
            DOCKER_TAG="${NORMALIZED_BRANCH}__${{ github.run_number }}"
            echo "docker_tag=$DOCKER_TAG" >> "$GITHUB_OUTPUT"
            echo "DOCKER_TAG=$DOCKER_TAG" >> "$GITHUB_ENV"
            echo "NORMALIZED_BRANCH=$NORMALIZED_BRANCH" >> "$GITHUB_ENV"
          else
            echo "normalized_branch=master" >> "$GITHUB_OUTPUT"
            echo "docker_tag=${{ github.ref_name }}" >> "$GITHUB_OUTPUT"
            echo "DOCKER_TAG=master" >> "$GITHUB_ENV"
            echo "NORMALIZED_BRANCH=${{ github.ref_name }}" >> "$GITHUB_ENV"
          fi

      - name: tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.tmate_debug_build }}

      - name: Prepare Dependency Folders
        run: mkdir -p project/target target ~/.ivy2 ~/.cache/coursier
      - name: Install frontend dependencies
        run: yarn install --immutable
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"

      - name: Assert unique evolution numbers
        run: tools/postgres/dbtool.js assert-unique-evolution-numbers
      - name: Assert schema.sql and evolutions are equal
        run: tools/postgres/dbtool.js check-evolutions-schema
      - name: Assert that all migrations are mentioned in one migration guide and that they have a reversion counterpart.
        run: tools/assert-complete-migrations.sh

      - name: Build frontend documentation
        run: yarn run docs --project-version "$WK_VERSION"
        env:
          WK_VERSION: ${{ github.run_number }}
      - name: Build webknossos (webpack)
        run: yarn build
      - name: Build webknossos (sbt)
        run: |
          if [ "${{ github.ref_name }}" == 'master' ]; then
            sbt clean compile stage
          else
            sbt -DfailOnWarning compile stage
          fi
      - name: Build webknossos-datastore (sbt)
        run: sbt -DfailOnWarning "project webknossosDatastore" copyMessages compile stage
      - name: Build webknossos-tracingstore (sbt)
        run: sbt -DfailOnWarning "project webknossosTracingstore" copyMessages compile stage
      - name: Checksum App Dirs
        run: find app webknossos-datastore/app webknossos-tracingstore/app -type f -exec md5sum {} \; | sort -k 2 | md5sum > app_checksum.txt

      - name: Build webknossos docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: |
            scalableminds/webknossos:${{ env.NORMALIZED_BRANCH }}
            scalableminds/webknossos:${{ env.DOCKER_TAG }}
      - name: Build webknossos-datastore docker image
        uses: docker/build-push-action@v6
        with:
          context: webknossos-datastore
          push: false
          tags: |
            scalableminds/webknossos-datastore:${{ env.NORMALIZED_BRANCH }}
            scalableminds/webknossos-datastore:${{ env.DOCKER_TAG }}
      - name: Build webknossos-tracingstore docker image
        uses: docker/build-push-action@v6
        with:
          context: webknossos-tracingstore
          push: false
          tags: |
            scalableminds/webknossos-tracingstore:${{ env.NORMALIZED_BRANCH }}
            scalableminds/webknossos-tracingstore:${{ env.DOCKER_TAG }}

      - name: Lint frontend code and check formatting
        if: ${{ github.ref_name != 'master' }}
        run: yarn run check-frontend
      - name: Check for cyclic dependencies in front-end
        if: ${{ github.ref_name != 'master' }}
        run: yarn check-cyclic-dependencies
      - name: Run frontend tests
        if: ${{ github.ref_name != 'master' }}
        run: yarn test-verbose
      - name: Lint backend code and check formatting
        if: ${{ github.ref_name != 'master' }}
        run: sbt ";scapegoat; scalafmtCheck; util/scalafmtCheck; webknossosTracingstore/scalafmtCheck; webknossosDatastore/scalafmtCheck"
      - name: Run backend tests
        if: ${{ github.ref_name != 'master' }}
        run: sbt -v "testOnly backend.*"
      - name: Start Fossildb
        if: ${{ github.ref_name != 'master' }}
        run: docker compose --file .github/docker-compose.yml up -d fossildb
      - name: Prepare binaryData folder
        run: mkdir -p binaryData/Organization_X && chmod 777 binaryData/Organization_X
      - name: Run end-to-end tests
        if: ${{ github.ref_name != 'master' }}
        uses: ./.github/actions/retry
        with:
          run: |
            sbt "testOnly e2e.* -- -Dtracingstore.fossildb.address=localhost -Dtracingstore.redis.address=localhost -Ddatastore.redis.address=localhost -Ddatastore.watchFileSystem.enabled=false" && s=0 && break || s=$?
          reties: 3
      - name: Validate frontend types
        if: ${{ github.ref_name != 'master' }}
        run: yarn typecheck

      - name: Start webknossos, datastore and tracingstore
        run: |
          set -e
          docker compose --file .github/docker-compose.yml up -d webknossos
          docker compose --file .github/docker-compose.yml up -d webknossos-datastore
          docker compose --file .github/docker-compose.yml up -d webknossos-tracingstore
      - name: Run webknossos smoke test
        uses: ./.github/actions/retry
        with:
          run: curl -v --fail "http://localhost:9000/api/health"
          retries: 20
          retry_delay_seconds: 5
      - name: Run webknossos-datastore smoke test
        uses: ./.github/actions/retry
        with:
          run: curl -v --fail "http://localhost:9090/data/health"
          retries: 20
          retry_delay_seconds: 5
      - name: Run webknossos-tracingstore smoke test
        uses: ./.github/actions/retry
        with:
          run: curl -v --fail "http://localhost:9050/tracings/health"
          retries: 20
          retry_delay_seconds: 5
      - name: Stop webknossos, datastore and tracingstore
        run: docker compose --file .github/docker-compose.yml down --volumes --remove-orphans

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Push webknossos image
        uses: ./.github/actions/retry
        with:
          run: docker push scalableminds/webknossos:${{ env.DOCKER_TAG }}
          retries: 5
          retry_delay_seconds: 10
      - name: Push normalized webknossos image
        uses: ./.github/actions/retry
        with:
          run: docker push scalableminds/webknossos:${{ env.NORMALIZED_BRANCH }}
          retries: 5
          retry_delay_seconds: 10
      - name: Push webknossos-datastore image
        uses: ./.github/actions/retry
        with:
          run: docker push scalableminds/webknossos-datastore:${{ env.DOCKER_TAG }}
          retries: 5
          retry_delay_seconds: 10
      - name: Push normalized webknossos-datastore image
        uses: ./.github/actions/retry
        with:
          run: docker push scalableminds/webknossos-datastore:${{ env.NORMALIZED_BRANCH }}
          retries: 5
          retry_delay_seconds: 10
      - name: Push webknossos-tracingstore image
        uses: ./.github/actions/retry
        with:
          run: docker push scalableminds/webknossos-tracingstore:${{ env.DOCKER_TAG }}
          retries: 5
          retry_delay_seconds: 10
      - name: Push normalized webknossos-tracingstore image
        uses: ./.github/actions/retry
        with:
          run: docker push scalableminds/webknossos-tracingstore:${{ env.NORMALIZED_BRANCH }}
          retries: 5
          retry_delay_seconds: 10
#      - name: Push docker images
#        run: |
#          function retry() {
#            for i in {1..5}; do
#              "$@" && s=0 && break || s=$?
#              sleep 10
#            done
#            return $s
#          }
#          if [ -n "${{ github.ref_name }}"]; then
#            retry docker push scalableminds/webknossos:$NORMALIZED_BRANCH
#            retry docker push scalableminds/webknossos:$DOCKER_TAG
#
#            retry docker push scalableminds/webknossos-datastore:$NORMALIZED_BRANCH
#            retry docker push scalableminds/webknossos-datastore:$DOCKER_TAG
#
#            retry docker push scalableminds/webknossos-tracingstore:$NORMALIZED_BRANCH
#            retry docker push scalableminds/webknossos-tracingstore:$DOCKER_TAG
#          fi
      - name: Report coverage
        if: ${{ github.ref_name != 'master' }}
        continue-on-error: true
        run: yarn coverage
