http.uri = "http://localhost:9000"

play {
  modules {
    enabled += "WebKnossosModule"
    enabled += "SilhouetteModule"
    enabled += "com.scalableminds.webknossos.datastore.DataStoreModule"
    enabled += "com.scalableminds.webknossos.tracingstore.TracingStoreModule"
  }
  http {
    filters = "com.scalableminds.webknossos.datastore.Filters"
    secret.key = "$JUeGY5yhw~pw%`pyVeDF*}`sF^kL'@sF$=dSTx?<z*f/vFg"
    parser {
      maxMemoryBuffer = 250M
      maxDiskBuffer = 1G
    }
  }
  filters.headers {
    # Unset some of the security filters enabled in datastore.Filters
    contentSecurityPolicy = null
    contentTypeOptions = null
    frameOptions = null
  }
  server {
    # Timeouts. Note that these take effect only in production mode (timeouts are shorter in dev)
    http.idleTimeout = 10000s
    akka.requestTimeout = 10000s
  }
}

pidfile.path = "/dev/null" # Avoid the creation of a pid file

application {
  insertInitialData = true
  insertLocalConnectDatastore = false
  authentication {
    defaultUser = {
      email = "scmboy@scalableminds.com"
      password = "secret"
      isSuperUser = true
    }
    ssoKey = "something secure"
    inviteExpiry = 14 days
  }
}

webKnossos {
  tabTitle = "webKnossos"
  user.time.tracingPause = 60 seconds
  tasks.maxOpenPerUser = 5
  newOrganizationMailingList = ""
  initialData {

  }
  cache {
    user.timeout = 3 minutes
  }
}

features {
  # this part of the config is exposed as JSON via /api/features
  discussionBoard = "https://support.webknossos.org"
  discussionBoardRequiresAdmin = false
  addForeignDataset = false
  hideNavbarLogin = false
  # if isDemoInstance is true, / will always be the /spotlight page
  # if it is false, / will be the login page, if not logged in, and the dashboard otherwise
  isDemoInstance = false
  autoBrushReadyDatasets = []
  taskReopenAllowedInSeconds = 30
  allowDeleteDatasets = true
  jobsEnabled = false
  # For new users, the dashboard will show a banner which encourages the user to check out the following dataset.
  # If isDemoInstance == true, `/createExplorative/hybrid/true` is appended to the URL so that a new tracing is opened.
  # If isDemoInstance == false, `/view` is appended to the URL so that it's opened in view mode (since the user might not
  # have an account).
  publicDemoDatasetUrl = "https://webknossos.org/datasets/scalable_minds/l4dense_motta_et_al_demo"
}

tracingstore {
  enabled = true
  key = "something-secure"
  name = "localhost"
  publicUri = "http://localhost:9000"
  webKnossos {
    uri = "http://localhost:9000"
    pingIntervalMinutes = 10
  }
  fossildb {
    address = "localhost"
    port = 7155
  }
  redis {
    address = "localhost"
    port = 6379
  }
}

datastore {
  enabled = true
  key = "something-secure"
  name = "localhost"
  publicUri = "http://localhost:9000"
  webKnossos {
    uri = "http://localhost:9000"
    pingIntervalMinutes = 10
  }
  fossildb {
    address = "localhost"
    port = 7155
  }
  baseFolder = "binaryData"
  watchFileSystem {
    enabled = true
    interval = 1 minute
  }
  cache {
    dataCube.maxEntries = 40
    mapping.maxEntries = 5
    agglomerateFile {
      maxFileHandleEntries = 15
      maxSegmentIdEntries = 625000
      blockSize = 512 # ideal value ~= file system block size / bytes per id
      cumsumMaxReaderRange = 1310720
    }
  }
  isosurface {
    timeout = 30 seconds
    actorPoolSize = 1
  }
  agglomerateSkeleton.maxEdges = 10000
}

# Proxy some routes to prefix + route (only if features.isDemoInstance, route "/" only if logged out)
proxy {
  prefix = ""
  routes = []
}

mail {
  enabled = true
  logToStdout = false # To protect privacy, always set to false in production
  smtp { # To be defined in secrets.conf
    host = ""
    port = 465
    tls = true
    auth = true
    user = ""
    pass = ""
  }
  defaultSender = "webKnossos <no-reply@webknossos.org>"
  demoSender = ""
  reply = "webKnossos <no-reply@webknossos.org>"
}

# SQL Database connection
slick = {
  profile = "slick.jdbc.PostgresProfile$"
  codegen.package = "com.scalableminds.webknossos.schema"
  db = {
    url = "jdbc:postgresql://localhost/webknossos"
    url = ${?POSTGRES_URL}
    driver = org.postgresql.Driver
    keepAliveConnection = true
    user = "postgres"
    password = "postgres"
    queueSize = 5000
  }
}

# Authentication
silhouette {
  cookieAuthenticator {
    cookieName = "id"
    cookiePath = "/"
    secureCookie = false
    httpOnlyCookie = true
    useFingerprinting = true
    authenticatorExpiry = 30 days
    cookieMaxAge = 365 days
  }

  tokenAuthenticator {
    authenticatorExpiry = 23000 days # must fit as seconds in 32bit signed int
    authenticatorIdleTimeout = 23000 days
    resetPasswordExpiry = 1 day
    dataStoreExpiry = 1 day
  }

  oauth1TokenSecretProvider {
    cookieName = "OAuth1TokenSecret"
    cookiePath = "/"
    secureCookie = false
    httpOnlyCookie = true
    expirationTime = 5 minutes
  }
}

jobs {
  flower {
    uri = "http://localhost:8888"
    user = "user1"
    password = "password1"
  }
}

braintracing {
  active = false
  organizationName = "sample_organization" # only users signing up for this organization will be registered on braintracing
  uri = "http://braintracing.org/"
  createUserScript = "oxalis_create_user.php"
  user = "changeMe"
  password = "changeMe"
  license = "changeMe"
}

#analytics {

  airbrake { # To be defined in secrets.conf
    environment = "dev-local"
    projectKey = "empty"
    projectID = "empty"
  }

  slackNotifications {
    url = "empty"
  }

  google.analytics.trackingID = ""

  backendAnalytics {
    uri = ""
    key = ""
    verboseLoggingEnabled = false # log all analytics events also to stdout
  }

#}


operatorData = """
  **This is a dev deployment**

  Please add the information of the operator to comply with GDPR.
"""
