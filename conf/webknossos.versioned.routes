# API versioning is handled here. Higher-Priority routes first

# example: assume, the features route has changed, introducing v2. The older v1 needs to be provided in the legacyApiController
# Note: keep this in sync with the reported version numbers in the utils.ApiVersioning trait

# version log:updateDatasetV8
 # changed in v9: Datasets are now identified by their id, not their name. The routes now need to pass a dataset id instead of a name and organization id tuple.
   # Requests to the TracingStore and DatasStore need to address a dataset based on its directoryName and organization id.
 # changed in v8: Datasets' name was renamed to id and the displayName is now named name.
 # changed in v7: datasources now contain scale as object with keys factor and unit, e.g. {"factor": [11,11,5.5], "unit": "nm"}
 # changed in v6: isValidName always returns Ok, with a JSON object containing possible errors and key "isValid"
 # new in v5: annotation layers (changed annotation json result, changed createExplorational params)
 # new in v4: project queried by id, not name (changed route parameters)
 # new in v3: annotation info and finish request now take timestamp
 # new in v2: annotation json contains visibility enum instead of booleans

->       /v9/                                                                 webknossos.latest.Routes

# v8: support changes to v9
PATCH    /v8/datasets/:organizationId/:datasetName                            controllers.LegacyApiController.updateDatasetV8(organizationId: String, datasetName: String)
GET      /v8/datasets/:organizationId/:datasetName/sharingToken               controllers.LegacyApiController.getDatasetSharingTokenV8(organizationId: String, datasetName: String)
PATCH    /v8/datasets/:organizationId/:datasetName/teams                      controllers.LegacyApiController.updateDatasetTeamsV8(organizationId: String, datasetName: String)
GET      /v8/datasets/:organizationId/:datasetName/isValidNewName             controllers.LegacyApiController.isValidNewNameV8(datasetName: String, organizationId: String)
GET      /v8/datasets/:organizationId/:datasetName                            controllers.LegacyApiController.readDatasetV8(organizationId: String, datasetName: String, sharingToken: Option[String])
GET      /v8/tasks/:id                                                        controllers.LegacyApiController.readTaskV8(id: String)
POST     /v8/tasks                                                            controllers.LegacyApiController.createTaskV8()
PUT      /v8/tasks/:id                                                        controllers.LegacyApiController.updateTaskV8(id: String)
GET      /v8/projects/:id/tasks                                               controllers.LegacyApiController.tasksForProjectV8(id: String, limit: Option[Int], pageNumber: Option[Int], includeTotalCount: Option[Boolean])
GET      /v8/annotations/:id/info                                             controllers.LegacyApiController.annotationInfoV8(id: String, timestamp: Long)
GET      /v8/tasks/:id/annotations                                            controllers.LegacyApiController.annotationsForTaskV8(id: String)

->       /v8/                                                                 webknossos.latest.Routes
#v7: support changes to v9
PATCH    /v7/datasets/:organizationId/:datasetName                            controllers.LegacyApiController.updateDatasetV8(organizationId: String, datasetName: String)
GET      /v7/datasets/:organizationId/:datasetName/sharingToken               controllers.LegacyApiController.getDatasetSharingTokenV8(organizationId: String, datasetName: String)
PATCH    /v7/datasets/:organizationId/:datasetName/teams                      controllers.LegacyApiController.updateDatasetTeamsV8(organizationId: String, datasetName: String)
GET      /v7/datasets/:organizationId/:datasetName/isValidNewName             controllers.LegacyApiController.isValidNewNameV8(datasetName: String, organizationId: String)
GET      /v7/datasets/:organizationId/:datasetName                            controllers.LegacyApiController.readDatasetV8(organizationId: String, datasetName: String, sharingToken: Option[String])
GET      /v7/tasks/:id                                                        controllers.LegacyApiController.readTaskV8(id: String)
POST     /v7/tasks                                                            controllers.LegacyApiController.createTaskV8()
PUT      /v7/tasks/:id                                                        controllers.LegacyApiController.updateTaskV8(id: String)
GET      /v7/projects/:id/tasks                                               controllers.LegacyApiController.tasksForProjectV8(id: String, limit: Option[Int], pageNumber: Option[Int], includeTotalCount: Option[Boolean])
GET      /v7/annotations/:id/info                                             controllers.LegacyApiController.annotationInfoV8(id: String, timestamp: Long)
GET      /v7/tasks/:id/annotations                                            controllers.LegacyApiController.annotationsForTaskV8(id: String)

# v7: support changes to v8
GET      /v7/datasets                                                         controllers.LegacyApiController.listDatasetsV7(isActive: Option[Boolean], isUnreported: Option[Boolean], organizationName: Option[String], onlyMyOrganization: Option[Boolean], uploaderId: Option[String], folderId: Option[String], includeSubfolders: Option[Boolean], searchQuery: Option[String], limit: Option[Int], compact: Option[Boolean])

->       /v7/                                                                 webknossos.latest.Routes

# v6: support changes to v9
PATCH    /v6/datasets/:organizationId/:datasetName                            controllers.LegacyApiController.updateDatasetV8(organizationId: String, datasetName: String)
GET      /v6/datasets/:organizationId/:datasetName/sharingToken               controllers.LegacyApiController.getDatasetSharingTokenV8(organizationId: String, datasetName: String)
PATCH    /v6/datasets/:organizationId/:datasetName/teams                      controllers.LegacyApiController.updateDatasetTeamsV8(organizationId: String, datasetName: String)
GET      /v6/datasets/:organizationId/:datasetName/isValidNewName             controllers.LegacyApiController.isValidNewNameV8(datasetName: String, organizationId: String)
GET      /v6/tasks/:id                                                        controllers.LegacyApiController.readTaskV8(id: String)
POST     /v6/tasks                                                            controllers.LegacyApiController.createTaskV8()
PUT      /v6/tasks/:id                                                        controllers.LegacyApiController.updateTaskV8(id: String)
GET      /v6/projects/:id/tasks                                               controllers.LegacyApiController.tasksForProjectV8(id: String, limit: Option[Int], pageNumber: Option[Int], includeTotalCount: Option[Boolean])
GET      /v6/annotations/:id/info                                             controllers.LegacyApiController.annotationInfoV8(id: String, timestamp: Long)
GET      /v6/tasks/:id/annotations                                            controllers.LegacyApiController.annotationsForTaskV8(id: String)


# v6: support changes to v7
GET      /v6/datasets                                                         controllers.LegacyApiController.listDatasetsV6(isActive: Option[Boolean], isUnreported: Option[Boolean], organizationName: Option[String], onlyMyOrganization: Option[Boolean], uploaderId: Option[String], folderId: Option[String], includeSubfolders: Option[Boolean], searchQuery: Option[String], limit: Option[Int], compact: Option[Boolean])
GET      /v6/datasets/:organizationName/:datasetName                          controllers.LegacyApiController.readDatasetV6(organizationName: String, datasetName: String, sharingToken: Option[String])

->       /v6/                                                                 webknossos.latest.Routes


# v5: support changes to v9
PATCH    /v5/datasets/:organizationId/:datasetName                            controllers.LegacyApiController.updateDatasetV8(organizationId: String, datasetName: String)
GET      /v5/datasets/:organizationId/:datasetName/sharingToken               controllers.LegacyApiController.getDatasetSharingTokenV8(organizationId: String, datasetName: String)
PATCH    /v5/datasets/:organizationId/:datasetName/teams                      controllers.LegacyApiController.updateDatasetTeamsV8(organizationId: String, datasetName: String)
GET      /v5/datasets/:organizationId/:datasetName/isValidNewName             controllers.LegacyApiController.isValidNewNameV8(datasetName: String, organizationId: String)
GET      /v5/tasks/:id                                                        controllers.LegacyApiController.readTaskV8(id: String)
POST     /v5/tasks                                                            controllers.LegacyApiController.createTaskV8()
PUT      /v5/tasks/:id                                                        controllers.LegacyApiController.updateTaskV8(id: String)
GET      /v5/projects/:id/tasks                                               controllers.LegacyApiController.tasksForProjectV8(id: String, limit: Option[Int], pageNumber: Option[Int], includeTotalCount: Option[Boolean])
GET      /v5/annotations/:id/info                                             controllers.LegacyApiController.annotationInfoV8(id: String, timestamp: Long)
GET      /v5/tasks/:id/annotations                                            controllers.LegacyApiController.annotationsForTaskV8(id: String)

# v5: support changes to v7
GET      /v5/datasets                                                         controllers.LegacyApiController.listDatasetsV6(isActive: Option[Boolean], isUnreported: Option[Boolean], organizationName: Option[String], onlyMyOrganization: Option[Boolean], uploaderId: Option[String], folderId: Option[String], includeSubfolders: Option[Boolean], searchQuery: Option[String], limit: Option[Int], compact: Option[Boolean])
GET      /v5/datasets/:organizationName/:datasetName                          controllers.LegacyApiController.readDatasetV6(organizationName: String, datasetName: String, sharingToken: Option[String])

# v5: support changes to v6
GET      /v5/datasets/:organizationName/:datasetName/isValidNewName           controllers.LegacyApiController.assertValidNewNameV5(organizationName: String, datasetName: String)

->       /v5/                                                                 webknossos.latest.Routes


->       /                                                                    webknossos.latest.Routes
