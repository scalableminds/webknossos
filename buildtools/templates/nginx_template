{% set name = project+"-"+branch %}
{% set https_urls = ([domain_and_tld, "www.%s" % domain_and_tld] if mode == "prod" and branch == "master" else ["%s.%s" % (branch, domain_and_tld)]) %}
{% set http_urls = https_urls + (["oxalis.neuro.mpg.de"] if mode == "prod" and project == "oxalis" and branch == "master" else [])%}
{% set https_url_string = " ".join(https_urls) %}
{% set http_url_string = " ".join(http_urls) %}

server {
  listen 80;
  server_name {{http_url_string}};

  {% if mode == "dev" %}

  access_log  /var/log/nginx/{{name}}.access.log;
  proxy_read_timeout 3600s;

  error_page 502 /50x.html;
  location = /50x.html {
    root /usr/lib/{{name}};
    internal;
  }

  location / {
    proxy_pass http://localhost:{{port}};
    proxy_set_header  X-Real-IP  $remote_addr;
    proxy_buffering    off;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
  }
  {% else %}
  rewrite ^ https://{{https_urls[0]}}$request_uri? permanent;
  {% endif %}

}

server {
  listen 443 ssl http2;
  server_name  {{https_url_string}};
  access_log  /var/log/nginx/{{name}}.access.log;

  error_page 502 /50x.html;
  location = /50x.html {
    root /usr/lib/{{name}};
    internal;
  }

  proxy_read_timeout 3600s;

  ssl                 on;
  ssl_certificate     cert/server.crt;
  ssl_certificate_key cert/server.key;
  ssl_protocols       SSLv3 TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers         HIGH:!aNULL:!MD5;

  location / {
    proxy_pass http://localhost:{{port}};
    proxy_set_header  X-Real-IP  $remote_addr;
    proxy_buffering    off;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
  }
}
