{"_id":{"$oid":"570b9f452653a1d7db8660b2"},"revision":2.0,"hash":"af3cbfe1d5b069935453b2ee56df630a05f41c45","applied_at":1.46037946171e+12,"db_up":"db.userDataLayers.find().forEach(function (dl) {\ndl.dataLayer.name = dl.name;\ndl.dataLayer.category = dl.dataLayer.typ;\ndl.dataLayer.fallback = {\n\"layerName\" : dl.dataLayer.typ,\n\"dataSourceName\" : dl.dataLayer.fallback\n}\ndb.userDataLayers.save(dl);\n})\n\ndb.dataSets.update({}, {\"$unset\" : {\"dataSource\" : \"\"}}, {\"multi\" : true})","db_down":"db.dataSets.update({}, {\"$unset\" : {\"dataSource\" : \"\"}}, {\"multi\" : true})","state":"applied","last_problem":""}
{"_id":{"$oid":"570b9f455d3389eb37e038b4"},"revision":1.0,"hash":"03437c1af301e1585bce5210f8812a975a7fc0e8","applied_at":1.460379460934e+12,"db_up":"db.timeTracking.find().forEach(function (tt) {\ntt.timeEntries.forEach(function(te){\nvar ts = {\n\"time\" : te.time,\n\"timestamp\" : te.timestamp,\n\"lastUpdate\" : te.timestamp,\n\"_user\" : tt.user\n}\n\nif(te.annotation)\nts.annotation = te.annotation\n\ndb.timeSpans.insert(ts)\n})\n})","db_down":"db.timeSpans.drop()","state":"applied","last_problem":""}
{"_id":{"$oid":"570b9f460bb3e10ceaf3085e"},"revision":6.0,"hash":"1ca74a03ce0806c1380e70c504f4c852398722ce","applied_at":1.46037946276e+12,"db_up":"db.annotations.find().forEach(function (annotation) {\nvar content = annotation._content;\nvar contentFetched;\n\nvar cursor;\n\nif (content.contentType == \"skeletonTracing\") {\ncursor = db.skeletons.find({\"_id\" : ObjectId(content._id)});\n} else {\ncursor = db.volumes.find({\"_id\" : ObjectId(content._id)});\n}\n\ncontentFetched = cursor.hasNext() \u0026\u0026 cursor.next();\n\nif (contentFetched)\ndb.annotations.update({\"_id\" : annotation._id}, {\"$set\" : {\"created\" : contentFetched.timestamp }});\n})","db_down":"db.annotations.update({}, {\"$unset\" : {\"created\" : \"\"}}, {\"multi\" : true})","state":"applied","last_problem":""}
{"_id":{"$oid":"570b9f4669bad6a90f81f5e3"},"revision":4.0,"hash":"a2f22c617837d630adf1fca848506f4f66eac54a","applied_at":1.460379462228e+12,"db_up":"db.dataSets.update({}, {\"$unset\" : {\"dataSource\" : \"\"}}, {\"multi\" : true})","db_down":"db.dataSets.update({}, {\"$unset\" : {\"dataSource\" : \"\"}}, {\"multi\" : true})","state":"applied","last_problem":""}
{"_id":{"$oid":"570b9f466fd07a73ae9c1879"},"revision":3.0,"hash":"3e3c8832b1739c45aab83434fae7ee766b7ab972","applied_at":1.460379461969e+12,"db_up":"db.userDataLayers.update({}, {\"$set\" : {\"dataLayer.isWritable\" : true}}, {\"multi\" : true})","db_down":"db.userDataLayers.update({}, {\"$unset\" : {\"dataLayer.isWritable\" : \"\"}}, {\"multi\" : true})","state":"applied","last_problem":""}
{"_id":{"$oid":"570b9f46e604b8b6d4a53a74"},"revision":5.0,"hash":"d9505e73b2b0767388aa8929b1aec89ac69a2167","applied_at":1.460379462509e+12,"db_up":"db.dataSets.update({}, {\"$set\" : {\"dataStoreInfo\" : {\"name\" : \"localhost\", \"url\" : \"http://localhost:9000\"}}}, {\"multi\" : true})","db_down":"","state":"applied","last_problem":""}
{"_id":{"$oid":"570b9f4745b06ffb0b29877a"},"revision":10.0,"hash":"993e8af09c094689f748c5e203d7ae2c8b948252","applied_at":1.460379463761e+12,"db_up":"db.dataSets.update({}, {\"$unset\" : {\"dataSource\" : \"\"}}, {\"multi\" : true})\ndb.userDataLayers.update({}, {\"$set\": {\"dataLayer.mappings\": []}}, {\"multi\" : true})","db_down":"db.dataSets.update({}, {\"$unset\" : {\"dataSource\" : \"\"}}, {\"multi\" : true})\ndb.userDataLayers.update({}, {\"$unset\": {\"dataLayer.mappings\": \"\"}}, {\"multi\" : true})","state":"applied","last_problem":""}
{"_id":{"$oid":"570b9f47b641a5efe6114af1"},"revision":7.0,"hash":"053b62509fe3cf647d06a9301f30a925250a2e6d","applied_at":1.46037946302e+12,"db_up":"db.users.update({}, {$unset: {\"configuration.settings.zoom\": 0.0}}, {multi: true})\ndb.volumes.update({}, {$set: {\"zoomLevel\": 0.0}}, {multi: true})\ndb.skeletons.update({}, {$set: {\"zoomLevel\": 0.0}}, {multi: true})","db_down":"db.users.update({}, {$set: {\"configuration.settings.zoom\": 0.0}}, {multi: true})\ndb.volumes.update({}, {$unset: {\"zoomLevel\": 0.0}}, {multi: true})\ndb.skeletons.update({}, {$unset: {\"zoomLevel\": 0.0}}, {multi: true})","state":"applied","last_problem":""}
{"_id":{"$oid":"570b9f47e07e885b174e4176"},"revision":9.0,"hash":"e5290606da49fef00f8753c37031fc7a8a20c330","applied_at":1.460379463521e+12,"db_up":"db.annotations.find({\"_name\" : {\"$exists\" : true}}).forEach(function (annotation) {\nvar name = annotation._name.replace(\".nml\", \"\");\n\ndb.annotations.update({\"_id\" : annotation._id}, {\"$set\" : {\"_name\" : name }});\n})","db_down":"","state":"applied","last_problem":""}
{"_id":{"$oid":"570b9f47e7b1155198ad1951"},"revision":8.0,"hash":"7e22e3ca460e8a14bee0085b7d21a55ef0d80d0b","applied_at":1.460379463269e+12,"db_up":"// should NOT be applied on master\ndb.teams.update({\"name\" : {\"$ne\" : \"Structure of Neocortical Circuits Group\"}}, {\"$set\" : {\"parent\" : \"Structure of Neocortical Circuits Group\"}}, {\"multi\" : true})","db_down":"","state":"applied","last_problem":""}
{"_id":{"$oid":"570b9f481f65c98afe846883"},"revision":11.0,"hash":"8e587d4dcaa16891a0e3a202442f59f5a3f1ef19","applied_at":1.460379464006e+12,"db_up":"db.users.update({}, {\"$set\" : {\"md5hash\" : \"\"}}, {\"multi\" : true})","db_down":"db.users.update({}, {\"$unset\" : {\"md5hash\" : \"\"}}, {\"multi\" : true})","state":"applied","last_problem":""}
{"_id":{"$oid":"570b9f484427e09cd6c4d448"},"revision":13.0,"hash":"6fe116acf91933bcc6563e717a3b310f9d3dbf74","applied_at":1.460379464465e+12,"db_up":"db.skeletons.find().forEach(function(elem){\nmodes = elem.settings.allowedModes;\nif(~modes.indexOf(\"arbitrary\"))\nelem.settings.allowedModes = [\"oblique\", \"flight\"];\nelse\nelem.settings.allowedModes = [];\ndb.skeletons.save(elem);\n})","db_down":"db.skeletons.find().forEach(function(elem){\nmodes = elem.settings.allowedModes;\nif((~modes.indexOf(\"oblique\")) || (~modes.indexOf(\"flight\")))\nelem.settings.allowedModes = [\"oxalis\", \"arbitrary\"];\nelse\nelem.settings.allowedModes = [\"oxalis\"];\ndb.skeletons.save(elem);\n});","state":"applied","last_problem":""}
{"_id":{"$oid":"570b9f48692760170ce7c532"},"revision":12.0,"hash":"9a32ec986e9978cb8242340c7efd5666bf569747","applied_at":1.460379464243e+12,"db_up":"db.users.find().forEach(function(elem){\nsettings = elem.configuration.settings.brightnessContrastSettings;\nfor(dataset in settings) {\nif(dataset != \"default\") {\nsettings[dataset] = {color: settings[dataset]};\n}\n}\nelem.configuration.settings.brightnessContrastColorSettings = elem.configuration.settings.brightnessContrastSettings;\ndelete elem.configuration.settings.brightnessContrastSettings;\ndb.users.save(elem);\n})","db_down":"db.users.find().forEach(function(elem){\nsettings = elem.configuration.settings.brightnessContrastColorSettings;\nfor(dataset in settings) {\nif(dataset != \"default\") {\nkeys = [];\nfor(key in settings[dataset]) {\nkeys.push(key);\n}\nsettings[dataset] = settings[dataset][keys[0]];\n}\n}\nelem.configuration.settings.brightnessContrastSettings = elem.configuration.settings.brightnessContrastColorSettings;\ndelete elem.configuration.settings.brightnessContrastColorSettings;\ndb.users.save(elem);\n})","state":"applied","last_problem":""}
{"_id":{"$oid":"570b9f48bdaa0b9cafee6302"},"revision":14.0,"hash":"9c387bbb8ab3e79c5bb3777430ef9810ed8b40ab","applied_at":1.46037946472e+12,"db_up":"db.taskTypes.update({}, {\"$set\" : {\"settings.advancedOptionsAllowed\" : true}, \"$push\" : {\"settings.allowedModes\" : \"orthogonal\"}}, {\"multi\" : true})\n\ndb.taskTypes.find().forEach(function(elem){\nelem.expectedTime.min = elem.expectedTime.min * 60;\nelem.expectedTime.max = elem.expectedTime.max * 60;\nelem.expectedTime.maxHard = elem.expectedTime.maxHard * 60;\n\ndb.taskTypes.save(elem);\n})\n\ndb.skeletons.update({}, {\"$set\" : {\"settings.advancedOptionsAllowed\" : true}, \"$push\" : {\"settings.allowedModes\" : \"orthogonal\"}}, {\"multi\" : true})\ndb.volumes.update({}, {\"$set\" : {\"settings.advancedOptionsAllowed\" : true}, \"$push\" : {\"settings.allowedModes\" : \"orthogonal\"}}, {\"multi\" : true})","db_down":"db.taskTypes.update({}, {\"$unset\" : {\"settings.advancedOptionsAllowed\" : \"\"}, \"$pull\" : {\"settings.allowedModes\" : \"orthogonal\"}}, {\"multi\" : true})\ndb.skeletons.update({}, {\"$unset\" : {\"settings.advancedOptionsAllowed\" : \"\"}, \"$pull\" : {\"settings.allowedModes\" : \"orthogonal\"}}, {\"multi\" : true})\ndb.volumes.update({}, {\"$unset\" : {\"settings.advancedOptionsAllowed\" : \"\"}, \"$pull\" : {\"settings.allowedModes\" : \"orthogonal\"}}, {\"multi\" : true})\n\ndb.taskTypes.find().forEach(function(elem){\nelem.expectedTime.min = elem.expectedTime.min / 60;\nelem.expectedTime.max = elem.expectedTime.max / 60;\nelem.expectedTime.maxHard = elem.expectedTime.maxHard / 60;\n\ndb.taskTypes.save(elem);\n})","state":"applied","last_problem":""}
{"_id":{"$oid":"570b9f4904ce5ccc1ea287e6"},"revision":15.0,"hash":"6c7c8dfd078baf20f9bcc86b6288186fe9a66b51","applied_at":1.460379464968e+12,"db_up":"db.skeletons.update({}, {\"$set\" : {\"editRotation\" : [0.0, 0.0, 0.0]}}, {\"multi\" : true})\ndb.volumes.update({}, {\"$set\" : {\"editRotation\" : [0.0, 0.0, 0.0]}}, {\"multi\" : true})","db_down":"db.skeletons.update({}, {\"$unset\" : {\"editRotation\" : \"\"}}, {\"multi\" : true})\ndb.volumes.update({}, {\"$unset\" : {\"editRotation\" : \"\"}}, {\"multi\" : true})","state":"applied","last_problem":""}
{"_id":{"$oid":"570b9f491d837b8980ebe490"},"revision":16.0,"hash":"17d4d0c8f47ff176033fba209fbd75ff4f7d071a","applied_at":1.460379465215e+12,"db_up":"db.nodes.update({}, {\"$set\" : {\"node.rotation\" : [0.0, 0.0, 0.0]}}, {\"multi\" : true})","db_down":"db.nodes.update({}, {\"$unset\" : {\"node.rotation\" : \"\"}}, {\"multi\" : true})","state":"applied","last_problem":""}
{"_id":{"$oid":"58135b640a15fc336b845018"},"revision":17.0,"hash":"7b14004983c4bba0b290d7a98f5f4727041835d5","applied_at":1.477663588205e+12,"db_up":"db.tasks.find().forEach(function(elem){\nvar neededAssignments = elem.instances - elem.assignedInstances\nfor (i = 0; i \u003c neededAssignments; i++) {\ndb.openAssignments.insert({\n\"_task\": elem._id,\n\"team\": elem.team,\n\"_project\": elem._project,\n\"neededExperience\": elem.neededExperience,\n\"priority\": elem.priority,\n\"created\": elem.created\n})\n}\n})","db_down":"db.tasks.find().forEach(function(elem){\ndb.tasks.update({\"_id\" : elem._id}, {\"$set\": {\"assignedInstances\" : elem.instances}})\n})\n\ndb.openAssignments.find().forEach(function(elem){\ndb.tasks.update({\"_id\" : elem._task}, {\"$inc\": {\"assignedInstances\" : -1} })\n})\n\ndb.openAssignments.remove({})","state":"applied","last_problem":""}
{"_id":{"$oid":"58135b644c20ffc4bedd3583"},"revision":18.0,"hash":"283a76c9fe4c000b1a8f1f4918a96fc995ca54c9","applied_at":1.477663588511e+12,"db_up":"db.users.update({}, {$rename: {\"configuration.settings\": \"userConfiguration.configuration\"}}, {multi: true})\ndb.users.update({}, {$unset: {\"configuration\": 0, \"userConfiguration.configuration.brightnessContrastSettings\": 0, \"userConfiguration.configuration.fourBit\": 0, \"userConfiguration.configuration.quality\": 0, \"userConfiguration.configuration.interpolation\": 0}, $set: {dataSetConfigurations: {}}}, {multi: true})","db_down":"db.users.update({}, {$rename: {\"userConfiguration.configuration\": \"configuration.settings\"}}, {multi: true})\ndb.users.update({}, {$unset: {dataSetConfigurations: 0, userConfiguration: 0}, $set: {\"configuration.settings.brightnessContrastSettings\": {\"default\": {brightness: 0, contrast: 1}, \"st08x2\": {brightness: 0, contrast: 2.4}, \"07x2\": {brightness: 0, contrast: 2.4}, \"Cortex\": {brightness: 55, contrast: 1}}, \"configuration.settings.fourBit\": false, \"configuration.settings.quality\": 0, \"configuration.settings.interpolation\": false}}, {multi: true})","state":"applied","last_problem":""}
{"_id":{"$oid":"58135b64f1c0a63e19c2dca9"},"revision":19.0,"hash":"1097bf910481b6c0447db363b153afd4fff3d962","applied_at":1.477663588789e+12,"db_up":"db.taskTypes.update({}, {$set: {\"isActive\": true}}, {multi: true})\ndb.tasks.update({}, {$set: {\"isActive\": true}}, {multi: true})\ndb.annotations.update({}, {$set: {\"isActive\": true}}, {multi: true})","db_down":"db.taskTypes.update({}, {$unset: {\"isActive\": 0}}, {multi: true})\ndb.tasks.update({}, {$unset: {\"isActive\": 0}}, {multi: true})\ndb.annotations.update({}, {$unset: {\"isActive\": 0}}, {multi: true})","state":"applied","last_problem":""}
{"_id":{"$oid":"58135b65356e58941d85a875"},"revision":22.0,"hash":"ba19303441410464a4c7e036d7676bfc305f85fd","applied_at":1.477663589709e+12,"db_up":"var scmboy = db.users.find({\"email\" : \"scmboy@scalableminds.com\"})\nvar teamCursor = db.teams.find({\"parent\" : {\"$exists\" : false}})\nif(scmboy.hasNext() \u0026\u0026 teamCursor.hasNext()) {\ndb.projects.insert({\n\"_owner\": scmboy.next()._id,\n\"name\": \"orphaned-tasks\",\n\"team\": teamCursor.next().name\n})\ndb.tasks.update({\"$or\" : [{\"_project\": {$exists: false}}, {\"_project\" : {\"$not\" : {\"$type\" : 2}}}]}, {$set: {\"_project\": \"orphaned-tasks\"}}, {multi: true})\n}","db_down":"db.tasks.update({\"_project\": \"orphaned-tasks\"}, {$unset: {\"_project\": true}}, {multi: true})\n\ndb.projects.remove({\"name\" : \"orphaned-tasks\"})","state":"applied","last_problem":""}
{"_id":{"$oid":"58135b657db72962f17b7010"},"revision":20.0,"hash":"e94bfd315672d84656eb9b5f78524dcce5b9264e","applied_at":1.477663589098e+12,"db_up":"db.tasks.update({}, {$set: {\"directLinks\": []}}, {multi: true})","db_down":"db.taskTypes.update({}, {$unset: {\"directLinks\": 1}}, {multi: true})","state":"applied","last_problem":""}
{"_id":{"$oid":"58135b65c6315402127beb2a"},"revision":21.0,"hash":"899fc14cef634dee9f8bc83d9405f9aa5569ec5b","applied_at":1.477663589409e+12,"db_up":"db.tasks.update({\"isActive\": {$exists: false}}, {$set: {\"isActive\": true}}, {multi: true})","db_down":"","state":"applied","last_problem":""}
{"_id":{"$oid":"58135b6615d61eaa529dd015"},"revision":25.0,"hash":"5249509718d0536e444b06ea6c6af67ab5d7b39f","applied_at":1.477663590596e+12,"db_up":"db.trees.remove({\"_tracing\": {$exists: false}});\n\ndb.trees.update({\"branchPoints\": {\"$exists\": false}}, {\"$set\": {\"branchPoints\": [], \"comments\": []}}, {\"multi\": true});\n\n{\nvar finished = false;\nwhile (!finished) {\ntry {\ndb.skeletons.find({\n\"notUpdated\": {\"$exists\": false},\n\"$or\": [{\"branchPoints\": {\"$gt\": []}}, {\"comments\": {\"$gt\": []}}]\n}).sort({\"_id\": 1}).forEach(function (skeleton) {\nprintjson(skeleton._id);\nvar branchPoints = skeleton.branchPoints;\nvar bpids = branchPoints.map(function (bp) {\nreturn bp.id\n});\nvar comments = skeleton.comments;\nvar cids = comments.map(function (c) {\nreturn c.node\n});\nvar nodeIds = bpids.concat(cids);\n\nvar trees = db.trees.find({\"_tracing\": skeleton._id}).toArray();\ntrees.forEach(function (tree) {\nvar treeBranchPoints = [];\nvar treeComments = [];\n\nvar nodes = db.nodes.find({\"_treeId\": tree._id, \"node.id\": {\"$in\": nodeIds}}).toArray();\n\nfor (var j = 0; j \u003c nodes.length; j++) {\nvar node = nodes[j];\nfor (var i = branchPoints.length - 1; i \u003e= 0; i--) {\nif (branchPoints[i].id == node.node.id) {\ntreeBranchPoints.push({\"id\": node.node.id, \"timestamp\": node.node.timestamp});\nbranchPoints.splice(i, 1);\n}\n}\nfor (var i = comments.length - 1; i \u003e= 0; i--) {\nif (comments[i].node == node.node.id) {\ntreeComments.push({\n\"node\": node.node.id,\n\"content\": comments[i].content,\n\"timestamp\": node.node.timestamp\n});\ncomments.splice(i, 1);\n}\n}\n}\n\ndb.trees.update({\"_id\": tree._id}, {\n\"$set\": {\n\"branchPoints\": treeBranchPoints,\n\"comments\": treeComments\n}\n}, {\"writeConcern\": {\"w\": 0}});\n});\n\ndb.skeletons.update({\"_id\": skeleton._id}, {\"$set\": {\"notUpdated\": true}}, {\"writeConcern\": {\"w\": 0}});\n});\nfinished = true\n} catch (err) {\nprint(\"Cursor exited! Restarting....\");\n}\n}\n}","db_down":"db.skeletons.find().forEach(function (skeleton) {\nvar branchPoints = [];\nvar comments = [];\n\ndb.trees.find({\"_tracing\": skeleton._id}).forEach(function (tree) {\nif (tree.branchPoints)\nbranchPoints = branchPoints.concat(tree.branchPoints);\nif (tree.comments)\ncomments = comments.concat(tree.comments);\n});\n\ndb.skeletons.update({\"_id\": skeleton._id},\n{\n\"$set\": {\n\"branchPoints\": branchPoints.sort(function (a, b) {\nreturn b.timestamp - a.timestamp\n}), \"comments\": comments\n},\n\"$unset\": {\"notUpdated\": true}\n})\n});\n\n\ndb.skeletons.find({}).forEach(function (skeleton) {\ndb.trees.update({\"_tracing\": skeleton._id}, {\"$set\": {\"activeTree\": true}}, {\"multi\": true})\n});","state":"applied","last_problem":""}
{"_id":{"$oid":"58135b661b6a7e591a0063f0"},"revision":23.0,"hash":"6f4bf7639d50f3ba2b701dfe27a3489c970e0e89","applied_at":1.477663589993e+12,"db_up":"db.taskTypes.update(\n{\"settings.allowedModes\" : \"oxalis\"},\n{\"$addToSet\": {\"settings.allowedModes\" : \"orthogonal\"}}, {\"multi\" : true})\n\ndb.taskTypes.update(\n{\"settings.allowedModes\" : \"oxalis\"},\n{\"$pull\" : {\"settings.allowedModes\" : \"oxalis\"}}, {\"multi\" : true})\n\ndb.taskTypes.update(\n{\"settings.allowedModes\" : \"arbitrary\"},\n{\"$push\": {\"settings.allowedModes\" : {\"$each\" : [\"oblique\", \"flight\"]}}}, {\"multi\" : true})\n\ndb.taskTypes.update(\n{\"settings.allowedModes\" : \"arbitrary\"},\n{\"$pull\" : {\"settings.allowedModes\" : \"arbitrary\"}}, {\"multi\" : true})","db_down":"","state":"applied","last_problem":""}
{"_id":{"$oid":"58135b66485ff7c980951125"},"revision":24.0,"hash":"df87704d0ed55d9328362ae3e6c3d282fbf678df","applied_at":1.477663590307e+12,"db_up":"db.dataSets.update({\"dataStoreInfo.typ\" : {\"$exists\" : false}}, {$set: {\"dataStoreInfo.typ\": \"webknossos-store\"}}, {multi: true})\n\ndb.dataStores.update({\"typ\" : {\"$exists\" : false}}, {$set: {\"typ\": \"webknossos-store\"}}, {multi: true})","db_down":"","state":"applied","last_problem":""}
{"_id":{"$oid":"58135b6692badc092276bcd4"},"revision":26.0,"hash":"0c39f3c9accd704530c45ab67aa9fec5776d2a5d","applied_at":1.477663590903e+12,"db_up":"db.projects.update({}, {$set: {\"priority\": 100}}, {multi: true})\ndb.openAssignments.update({}, {$set: {\"priority\": 100}}, {multi: true})","db_down":"","state":"applied","last_problem":""}
{"_id":{"$oid":"58135b67929f9055b0aa417e"},"revision":29.0,"hash":"82ae3238988b3c2fdbe4d82b1bd8e1cf408a0c20","applied_at":1.477663591817e+12,"db_up":"db.projects.update({}, {$set: {\"paused\": false}}, {multi: true})","db_down":"db.projects.update({}, {$unset: {\"paused\": true}}, {multi: true})","state":"applied","last_problem":""}
{"_id":{"$oid":"58135b67bbfde00c2a12eafc"},"revision":28.0,"hash":"19a184ee07c0da0308e1e7ff0bed85e94e30a79f","applied_at":1.477663591509e+12,"db_up":"db.mturkAssignments.update({}, {$set: {\"numberOfInProgressAssignments\": 0}}, {multi: true})","db_down":"","state":"applied","last_problem":""}
{"_id":{"$oid":"58135b67d02c5780a08cd4b0"},"revision":27.0,"hash":"27d5c1c12d0512ac5cdf70928df0debd32155811","applied_at":1.477663591198e+12,"db_up":"db.projects.update({}, {$set: {\"assignmentConfiguration\": {\"location\" : \"webknossos\"}}}, {multi: true})","db_down":"","state":"applied","last_problem":""}
