version: "2.2"

services:
  # Production
  webknossos:
    build: .
    image: scalableminds/webknossos:${DOCKER_TAG:-master}
    ports:
      - "9000:9000"
      - "8000:8000" # from webknossos-connect
    links:
      - "fossildb-persisted:fossildb"
      - "postgres-persisted:postgres"
    depends_on:
      postgres-persisted:
        condition: service_healthy
      fossildb-persisted:
        condition: service_healthy
      redis:
        condition: service_healthy
    command:
      - -Dconfig.file=conf/application.conf
      - -Djava.net.preferIPv4Stack=true
      - -Dhttp.address=0.0.0.0
      - -Dtracingstore.fossildb.address=fossildb
      - -Dtracingstore.redis.address=redis
      - -Dslick.db.url=jdbc:postgresql://postgres/webknossos
      - -Dapplication.insertInitialData=false
      - -Dapplication.insertLocalConnectDatastore=true
      - -Dapplication.authentication.enableDevAutoLogin=false
      # the following lines disable the integrated datastore:
      # - -Dplay.modules.enabled-="com.scalableminds.webknossos.datastore.DataStoreModule"
      # - -Ddatastore.enabled=false
      # - -Dplay.http.router="noDS.Routes"
      # the following lines need to be adapted for non-localhost deployments
      # - -Dtracingstore.publicUrl=http://example.org:9000
      # - -Ddatastore.publicUrl=http://example.org:9000
    volumes:
      - ./binaryData:/srv/webknossos/binaryData
    environment:
      - POSTGRES_URL=jdbc:postgresql://postgres/webknossos
    user: ${USER_UID:-1000}:${USER_GID:-1000}

  webknossos-datastore:
    build: webknossos-datastore
    image: scalableminds/webknossos-datastore:${DOCKER_TAG:-master}
    ports:
      - "9090:9090"
    entrypoint: bin/webknossos-datastore
    volumes:
      - ./binaryData:/srv/webknossos-datastore/binaryData
    command:
      - -J-Xmx20G
      - -J-Xms1G
      - -Dconfig.file=conf/standalone-datastore.conf
      - -Dhttp.port=9090
      - -Dhttp.address=0.0.0.0
      - -Dhttp.uri=http://webknossos-datastore:9090
      - -Ddatastore.oxalis.uri=webknossos:9000

  webknossos-tracingstore:
    build: webknossos-tracingstore
    image: scalableminds/webknossos-tracingstore:${DOCKER_TAG:-master}
    ports:
      - "9050:9050"
    entrypoint: bin/webknossos-tracingstore
    command:
      - -J-Xmx20G
      - -J-Xms1G
      - -Dconfig.file=conf/standalone-tracingstore.conf
      - -Dhttp.port=9050
      - -Dhttp.address=0.0.0.0
      - -Dhttp.uri=http://webknossos-datastore:9050
      - -Dtracingstore.fossildb.address=fossildb
      - -Dtracingstore.redis.address=redis
      - -Ddatastore.oxalis.uri=webknossos:9000
    links:
      - "fossildb-persisted:fossildb"
    depends_on:
      redis:
        condition: service_healthy
      fossildb-persisted:
        condition: service_healthy

  # Development
  base:
    image: scalableminds/webknossos-dev
    build:
      context: .
      dockerfile: Dockerfile.dev
      cache_from:
        - scalableminds/webknossos-dev
        - scalableminds/webknossos-dev:${DEV_CACHE:-master}
    environment:
      - USER_NAME=${USER_NAME:-sbt-user}
      - USER_UID
      - USER_GID
      - COVERALLS_REPO_TOKEN
      - TZ=${TZ:-Europe/Berlin}
      - POSTGRES_URL=jdbc:postgresql://postgres/webknossos
      - HOME=/root
      - CIRCLE_TAG=${CIRCLE_TAG}
      - CIRCLE_BUILD_NUM=${CIRCLE_BUILD_NUM}
      - NODE_OPTIONS=--max_old_space_size=2048
    working_dir: /home/${USER_NAME:-sbt-user}/webknossos
    volumes:
      - ".:/home/${USER_NAME:-sbt-user}/webknossos"
      - "${DOCKER_CACHE_PREFIX:-~}/.ivy2:/tmp/.ivy2"
      - "${DOCKER_CACHE_PREFIX:-~}/.cache/coursier:/root/.cache/coursier"
      - "${DOCKER_CACHE_PREFIX:-~}/.cache/yarn:/root/.cache/yarn"
    user: ${USER_UID:-1000}:${USER_GID:-1000}

  compile:
    extends:
      service: base
    depends_on:
      postgres:
        condition: service_healthy

  dev:
    extends:
      service: base
    ports:
      - "5005:5005"
      - "9000:9000"
    links:
      - "fossildb-dev:fossildb"
      - "postgres-dev:postgres"
    depends_on:
      redis:
        condition: service_healthy
      postgres-dev:
        condition: service_healthy
      fossildb-dev:
        condition: service_healthy
    environment:
      - POSTGRES_URL=jdbc:postgresql://postgres/webknossos
    command:
      - bash
      - -c
      - >
        sbt
        -v -d -jvm-debug 5005
        "run
          -Djava.net.preferIPv4Stack=true
          -Dhttp.address=0.0.0.0
          -Dtracingstore.fossildb.address=fossildb
          -Dtracingstore.redis.address=redis"
    stdin_open: true

  # Tests
  backend-tests:
    extends:
      service: base
    ports:
      - "5005:5005"
      - "9000:9000"
    command: sbt -v "testOnly backend.*"

  backend-lint-format:
    extends:
      service: base
    ports:
      - "5005:5005"
      - "9000:9000"
    command: sbt ";scapegoat; scalafmtCheck; util/scalafmtCheck; webknossosTracingstore/scalafmtCheck; webknossosDatastore/scalafmtCheck"

  e2e-tests:
    extends:
      service: backend-tests
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      fossildb:
        condition: service_healthy
    environment:
      - POSTGRES_URL=jdbc:postgresql://postgres/webknossos_testing
    command:
      - bash
      - -c
      - >
        sbt
        -v
        "testOnly e2e.* --
          -Dtracingstore.fossildb.address=fossildb
          -Dtracingstore.redis.address=redis"
    volumes:
      - ./binaryData/Connectomics department:/home/${USER_NAME:-sbt-user}/webknossos/binaryData/Organization_X

  screenshot-tests:
    image: scalableminds/puppeteer:master
    environment:
      - URL
    working_dir: /home/pptruser/webknossos
    command: bash -c 'for i in {1..3}; do yarn test-screenshot && break; done'
    volumes:
      - ".:/home/pptruser/webknossos"
    user: ${USER_UID:-1000}:${USER_GID:-1000}

  # webKnossos-connect
  webknossos-connect:
    image: scalableminds/webknossos-connect:master__205
    volumes:
      - "./conf/connect:/app/data"
    # Publish webknossos-connect ports in webknossos container
    network_mode: service:webknossos

  # Postgres
  postgres:
    image: postgres:10-alpine
    environment:
      POSTGRES_DB: webknossos
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h 127.0.0.1 -p 5432"]
      interval: 2s
      timeout: 5s
      retries: 30

  postgres-persisted:
    extends:
      service: postgres
    ports:
      - "5434:5432"
    volumes:
      - "./pg/db:/var/lib/postgresql/data/"

  postgres-dev:
    extends:
      service: postgres
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - "./pg/dev-db:/var/lib/postgresql/data/"

  psql:
    extends: postgres
    command: psql -h postgres -U postgres webknossos
    links:
      - "postgres-persisted:postgres"
    depends_on:
      postgres-persisted:
        condition: service_healthy
    environment:
      PGPASSWORD: postgres
    volumes:
      - ./conf/evolutions/:/evolutions/

  drop-db:
    extends: postgres
    command: psql -h postgres -U postgres postgres -c "DROP DATABASE webknossos"
    links:
      - "postgres-persisted:postgres"
    depends_on:
      postgres-dev:
        condition: service_healthy
    environment:
      PGPASSWORD: postgres

  # FossilDB
  fossildb:
    image: scalableminds/fossildb:master__386
    command:
      - fossildb
      - -c
      - skeletons,skeletonUpdates,volumes,volumeData,volumeUpdates
    user: ${USER_UID:-fossildb}:${USER_GID:-fossildb}

  fossildb-persisted:
    extends:
      service: fossildb
    volumes:
      - "./fossildb/data:/fossildb/data"
      - "./fossildb/backup:/fossildb/backup"

  fossildb-dev:
    extends:
      service: fossildb
    volumes:
      - "./fossildb-dev/data:/fossildb/data"
      - "./fossildb-dev/backup:/fossildb/backup"

  # Redis
  redis:
    image: redis:5.0
    command:
      - redis-server
    healthcheck:
      test:
        - CMD
        - bash
        - -c
        - "exec 3<> /dev/tcp/127.0.0.1/6379 && echo PING >&3 && head -1 <&3 | grep PONG"
      timeout: 1s
      interval: 5s
      retries: 10
