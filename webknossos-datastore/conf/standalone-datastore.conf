http {
  uri = "http://localhost:9090"
  port = 9090
}

play {
  modules.enabled += "com.scalableminds.webknossos.datastore.DataStoreModule"
  http {
    requestHandler = "DsRequestHandler"
    secret.key = "/tfger=?!359=(623de35]/3eg>34>r9/of/45gh654>?!654g/5f4//hbfw245<"
    parser {
      maxMemoryBuffer = 250M
      maxDiskBuffer = 1G
    }
    filters = "com.scalableminds.webknossos.datastore.Filters"
  }
  filters.headers {
    # Unset some of the security filters enabled in datastore.Filters
    contentSecurityPolicy = null
    contentTypeOptions = null
  }
  server {
    # Timeouts. Note that these take effect only in production mode (timeouts are shorter in dev)
    http.idleTimeout = 10000s
    akka.requestTimeout = 10000s
  }
  ws {
    timeout.request = 2 hours
    timeout.idle = 2 hours
    timeout.connection = 2 hours
  }
}

datastore {
  key = "something-secur3"
  name = "standalone-9090"
  webKnossos {
    uri = "http://localhost:9000"
    pingInterval = 10 minutes
  }
  baseFolder = "binaryData"
  watchFileSystem {
    enabled = true
    interval = 1 minute
    initialDelay = 5 seconds
  }
  cache {
    dataCube.maxEntries = 1000
    mapping.maxEntries = 5
    agglomerateFile {
      maxFileHandleEntries = 15
      maxSegmentIdEntries = 625000
      blockSize = 512 # ideal value ~= file system block size / bytes per id
      cumsumMaxReaderRange = 1310720
    }
  }
  isosurface {
    timeout = 30 seconds
    actorPoolSize = 1
  }
  redis {
    address = "localhost"
    port = 6379
  }
  agglomerateSkeleton.maxEdges = 10000
  reportUsedStorage.enabled = false
}

slackNotifications {
  uri = ""
  verboseLoggingEnabled = false # log all slack messages also to stdout
}

pidfile.path = "/dev/null" # Avoid the creation of a pid file
