// flow-typed signature: 60b6ede93aca4a3d337b35f0b0140380
// flow-typed version: <<STUB>>/airbrake-js_v^0.5.8/flow_v0.37.4

/**
 * This is an autogenerated libdef stub for:
 *
 *   'airbrake-js'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the 
 * community by sending a pull request to: 
 * https://github.com/flowtype/flow-typed
 */

declare module 'airbrake-js' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'airbrake-js/dist/client' {
  declare module.exports: any;
}

declare module 'airbrake-js/dist/client.min' {
  declare module.exports: any;
}

declare module 'airbrake-js/dist/instrumentation/jquery' {
  declare module.exports: any;
}

declare module 'airbrake-js/lib/client' {
  declare module.exports: any;
}

declare module 'airbrake-js/lib/instrumentation/jquery' {
  declare module.exports: any;
}

declare module 'airbrake-js/lib/internal/compat' {
  declare module.exports: any;
}

declare module 'airbrake-js/lib/internal/default_filter' {
  declare module.exports: any;
}

declare module 'airbrake-js/lib/internal/jsonify_notice' {
  declare module.exports: any;
}

declare module 'airbrake-js/lib/internal/merge' {
  declare module.exports: any;
}

declare module 'airbrake-js/lib/internal/promise' {
  declare module.exports: any;
}

declare module 'airbrake-js/lib/internal/truncate' {
  declare module.exports: any;
}

declare module 'airbrake-js/lib/processors/stack' {
  declare module.exports: any;
}

declare module 'airbrake-js/lib/reporters/compat' {
  declare module.exports: any;
}

declare module 'airbrake-js/lib/reporters/console' {
  declare module.exports: any;
}

declare module 'airbrake-js/lib/reporters/jsonp' {
  declare module.exports: any;
}

declare module 'airbrake-js/lib/reporters/xhr' {
  declare module.exports: any;
}

// Filename aliases
declare module 'airbrake-js/dist/client.js' {
  declare module.exports: $Exports<'airbrake-js/dist/client'>;
}
declare module 'airbrake-js/dist/client.min.js' {
  declare module.exports: $Exports<'airbrake-js/dist/client.min'>;
}
declare module 'airbrake-js/dist/instrumentation/jquery.js' {
  declare module.exports: $Exports<'airbrake-js/dist/instrumentation/jquery'>;
}
declare module 'airbrake-js/lib/client.js' {
  declare module.exports: $Exports<'airbrake-js/lib/client'>;
}
declare module 'airbrake-js/lib/instrumentation/jquery.js' {
  declare module.exports: $Exports<'airbrake-js/lib/instrumentation/jquery'>;
}
declare module 'airbrake-js/lib/internal/compat.js' {
  declare module.exports: $Exports<'airbrake-js/lib/internal/compat'>;
}
declare module 'airbrake-js/lib/internal/default_filter.js' {
  declare module.exports: $Exports<'airbrake-js/lib/internal/default_filter'>;
}
declare module 'airbrake-js/lib/internal/jsonify_notice.js' {
  declare module.exports: $Exports<'airbrake-js/lib/internal/jsonify_notice'>;
}
declare module 'airbrake-js/lib/internal/merge.js' {
  declare module.exports: $Exports<'airbrake-js/lib/internal/merge'>;
}
declare module 'airbrake-js/lib/internal/promise.js' {
  declare module.exports: $Exports<'airbrake-js/lib/internal/promise'>;
}
declare module 'airbrake-js/lib/internal/truncate.js' {
  declare module.exports: $Exports<'airbrake-js/lib/internal/truncate'>;
}
declare module 'airbrake-js/lib/processors/stack.js' {
  declare module.exports: $Exports<'airbrake-js/lib/processors/stack'>;
}
declare module 'airbrake-js/lib/reporters/compat.js' {
  declare module.exports: $Exports<'airbrake-js/lib/reporters/compat'>;
}
declare module 'airbrake-js/lib/reporters/console.js' {
  declare module.exports: $Exports<'airbrake-js/lib/reporters/console'>;
}
declare module 'airbrake-js/lib/reporters/jsonp.js' {
  declare module.exports: $Exports<'airbrake-js/lib/reporters/jsonp'>;
}
declare module 'airbrake-js/lib/reporters/xhr.js' {
  declare module.exports: $Exports<'airbrake-js/lib/reporters/xhr'>;
}
