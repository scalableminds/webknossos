include "silhouette.conf"

# Configuration
application {
  name = webKnossos
  branch = local
  version = "1.0.0-1"
}
libraryDependencies += filters

play.modules.enabled += "com.scalableminds.braingames.datastore.DataStoreModule"
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoModule"

datastore {
  key = "something-secure"
  name = "localhost"
  debugMode = true
  oxalis{
    uri = "localhost:9000"
    secured = false
  }
}

# Defining the listening address:
http.address = "127.0.0.1"
http.uri = "http://localhost:9000"

evolutionplugin = disabled

workload {
  mail = ""
  active = false
}

braintracing{
  active=false
  newuserlist=""
  logTimeForExplorative=false
}

application{
  # The secret key is used to secure cryptographics functions.
  secret="$JUeGY5yhw~pw%`pyVeDF*}`sF^kL'@sF$=dSTx?<z*f/vFg"
  enableAutoVerify=false
  insertInitialData=true
  authentication{
    enableDevAutoLogin=true
    enableDevAutoVerify=false
    enableDevAutoAdmin=false
    defaultUser={
      email="scmboy@scalableminds.com"
      password="secret"
    }
    ssoKey="something secure"
    # token used to authenticate webknossos to the datastore
    dataStoreToken="somethingSecure"
  }
}

# Actor settings
# ~~~~~
actor.defaultTimeout = 10
js.defaultTimeout = 5
akka.loggers = ["akka.event.slf4j.Slf4jLogger"]

# Binary data settings
# ~~~~~
braingames.binary{
  cacheMaxSize = 10
  loadTimeout = 10 # in seconds
  saveTimeout = 10 # in seconds
  baseFolder = binaryData
  tracingDataFolder = tracingData
  backupFolder = backup

  changeHandler{
    enabled = true
    tickerInterval = 10 # in minutes
  }
}

oxalis{
  annotation.storageFolder="data/nmls"

  user.time.tracingPauseInSeconds=60

  tasks.maxOpenPerUser = 5

  query.maxResults = 100
}

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
mongodb{
  db=play-oxalis
  url="127.0.0.1"
  port=27017
  needsAuth=false
  knowledgedb.db=knowledgeDB
  binary.dbname=binaryData

  evolution{
    enabled=true
    mongoCmd="mongo "${mongodb.url}":"${mongodb.port}"/"${mongodb.db}
    applyProdEvolutions=true
    applyDownEvolutions=true
  }
}

# Email configuration
# ~~~~~
mail{
  enabled=true //false
  smtp{ # To be defined in secrets.conf
    host=""
    port=465
    tls=true
    auth=true
    user=""
    pass=""
  }
  subject.prefix="webKnossos | "
}

# AWS config (optional)
# ~~~~~
amazon.sqs { # To be defined in secrets.conf
  accessKey = ""
  secretKey = ""
  region = ""
  clientId = ""
}

amazon.mturk {
  serviceUrl = {
    sandbox = "https://mechanicalturk.sandbox.amazonaws.com/?Service=AWSMechanicalTurkRequester"
    production = "https://mechanicalturk.amazonaws.com?Service=AWSMechanicalTurkRequester"
  }
  submissionUrl = {
    sandbox = "https://workersandbox.mturk.com/mturk/externalSubmit"
    production = "https://www.mturk.com/mturk/externalSubmit"
  }
  retriableErrors = ["Server.ServiceUnavailable"]
  retryAttempts = 10
  retryDelayMillis = 1000
  sandbox = true
  questionTemplateBaseDir = "conf/mturk/"
}

amazon.mturk { # To be defined in secrets.conf
  accessKey = ""
  secretKey = ""
}

# Airbrake config (optional)
# ~~~~~
airbrake{ # To be defined in secrets.conf
  apiKey=""
  ssl=false
  enabled=false
  endpoint="api.airbrake.io/notifier_api/v2/notices"
  environment="dev-local-"${application.branch}
  projectKey=""
  projectID=""
}

mail.reply="No reply <no-reply@webknossos.org>"

#play.mailer {
#  mock = true
#  host = localhost
#}

# other settings
play.http.parser.maxMemoryBuffer=250M
play.http.parser.maxDiskBuffer=1G
#play.http.filters = "utils.Filters"
play.http.errorHandler = "utils.ErrorHandler"
