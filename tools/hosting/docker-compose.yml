version: "2.2"

services:
  webknossos:
    image: scalableminds/webknossos:${DOCKER_TAG:-20.02.0}
    ports:
      - "127.0.0.1:9000:9000"
    depends_on:
      postgres:
        condition: service_healthy
      fossildb:
        condition: service_healthy
      redis:
        condition: service_healthy
    command:
      - -Dconfig.file=conf/application.conf
      - -Djava.net.preferIPv4Stack=true
      - -Dhttp.address=0.0.0.0
      - -Dtracingstore.fossildb.address=fossildb
      - -Dtracingstore.redis.address=redis
      - -Dslick.db.url=jdbc:postgresql://postgres/webknossos
      - -Dapplication.insertInitialData=false
      - -Dapplication.authentication.enableDevAutoLogin=false
      - -Dtracingstore.publicUri=https://${PUBLIC_HOST}
      - -Ddatastore.publicUri=https://${PUBLIC_HOST}
    volumes:
      - ./data:/srv/webknossos/binaryData
    environment:
      - POSTGRES_URL=jdbc:postgresql://postgres/webknossos
      - VIRTUAL_HOST=${PUBLIC_HOST}
      - LETSENCRYPT_HOST=${PUBLIC_HOST}
    user: ${USER_UID:-1000}:${USER_GID:-1000}

  # Postgres
  postgres:
    image: postgres:10-alpine
    environment:
      POSTGRES_DB: webknossos
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h 127.0.0.1 -p 5432"]
      interval: 2s
      timeout: 5s
      retries: 30
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - "./persistent/postgres:/var/lib/postgresql/data/"

  psql:
    extends: postgres
    command: psql -h postgres -U postgres webknossos
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGPASSWORD: postgres

  # FossilDB
  fossildb:
    image: scalableminds/fossildb:master__410
    command:
      - fossildb
      - -c
      - skeletons,skeletonUpdates,volumes,volumeData,volumeUpdates
    user: 0:0
    volumes:
      - "./persistent/fossildb/data:/fossildb/data"
      - "./persistent/fossildb/backup:/fossildb/backup"

  # Redis
  redis:
    image: redis:5.0
    command:
      - redis-server
    healthcheck:
      test:
        - CMD
        - bash
        - -c
        - "exec 3<> /dev/tcp/127.0.0.1/6379 && echo PING >&3 && head -1 <&3 | grep PONG"
      timeout: 1s
      interval: 5s
      retries: 10

  # Nginx
  nginx:
    image: scalableminds/nginx-proxy:master__117
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./persistent/nginx/certs:/etc/nginx/certs
      - ./persistent/nginx/vhost.d:/etc/nginx/vhost.d
      - ./persistent/nginx/html:/usr/share/nginx/html
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    environment:
      - DEFAULT_EMAIL=${LETSENCRYPT_EMAIL}
    depends_on:
      - nginx
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./persistent/nginx/certs:/etc/nginx/certs
      - ./persistent/nginx/vhost.d:/etc/nginx/vhost.d
      - ./persistent/nginx/html:/usr/share/nginx/html
